parse names from beginning of videos so then can use that as base for any NaN names

implement error chekcing for like single character etc.

one script for purely extracting info, not chekcing (maybe most basic)

2nd script for cleaning up (organizational purposes)

collection.Counter - library where counter is a class

sum of chips - use data
- drop when sum of chips != correct sum of chips
what is correct sum of chips?
use counter to find correct sum of chips - use counter to find key with max value (i.e. max occurences)

- manually extract 100 rando screenshots and respective chip sets and then compare 

formatting:
all images in one folder

```
{"filepath": "paht/to/image.jpg", "names": ["DOE", "JOHNSON"], chips": [100, 200]}
{"filepath": "paht/to/image.jpg", "names": ["DOE", "JOHNSON"], chips": [100, 200]}
{"filepath": "paht/to/image.jpg", "names": ["DOE", "JOHNSON"], chips": [100, 200]}
{"filepath": "paht/to/image.jpg", "names": ["DOE", "JOHNSON"], chips": [100, 200]}
{"filepath": "paht/to/image.jpg", "names": ["DOE", "JOHNSON"], chips": [100, 200]}
{"filepath": "paht/to/image.jpg", "names": ["DOE", "JOHNSON"], chips": [100, 200]}
{"filepath": "paht/to/image.jpg", "names": ["DOE", "JOHNSON"], chips": [100, 200]}
{"filepath": "paht/to/image.jpg", "names": ["DOE", "JOHNSON"], chips": [100, 200]}
{"filepath": "paht/to/image.jpg", "names": ["DOE", "JOHNSON"], chips": [100, 200]}
{"filepath": "paht/to/image.jpg", "names": ["DOE", "JOHNSON"], chips": [100, 200]}
{"filepath": "paht/to/image.jpg", "names": ["DOE", "JOHNSON"], chips": [100, 200]}
{"filepath": "paht/to/image.jpg", "names": ["DOE", "JOHNSON"], chips": [100, 200]}
{"filepath": "paht/to/image.jpg", "names": ["DOE", "JOHNSON"], chips": [100, 200]}
{"filepath": "paht/to/image.jpg", "names": ["DOE", "JOHNSON"], chips": [100, 200]}
{"filepath": "paht/to/image.jpg", "names": ["DOE", "JOHNSON"], chips": [100, 200]}
{"filepath": "paht/to/image.jpg", "names": ["DOE", "JOHNSON"], chips": [100, 200]}
```
out.jsonl
each line is a json object

step 2 : filter the above data
- group by same data source
- combine images by same prefix?


2.25.25
we try to evaluate function 
Loss( f(current-chip-counts), win-percentages  ) 
win percentage is in terms of who actually won 
matrix --> largest chip stack guy 


pass in chip counts, output is a double stochastic matrix 
prepare value with target matrix (0 and 1s) which actually tells us where the players....
calculate loss 


try strictest cleaning 
then if we can have tens of thousands of images 
report yield (%), going from perfectly fine frame from yield to number (after deduplication)
if we get 10k, itll be fine 
(check slack)

go from raw screenshots to frame, then deduplicate,


yield % --> including all frames. total # of valid frames  / 95406
# of valid frames
# of unique frames  (i.e. after deduplication) 
goal is 10000^
